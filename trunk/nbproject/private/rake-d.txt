clean=Remove any temporary products.
clobber=Remove any generated file.
cruise=Continuous build target
db\:abort_if_pending_migrations=Raises an error if there are pending migrations
db\:charset=Retrieves the charset for the current environment's database
db\:collation=Retrieves the collation for the current environment's database
db\:create=Create the database defined in config/database.yml for the current RAILS_ENV
db\:create\:all=Create all the local databases defined in config/database.yml
db\:drop=Drops the database for the current RAILS_ENV
db\:drop\:all=Drops all the local databases defined in config/database.yml
db\:fixtures\:identify=Search for a fixture given a LABEL or ID.
db\:fixtures\:load=Load fixtures into the current environment's database.  Load specific fixtures using FIXTURES=x,y
db\:migrate=Migrate the database through scripts in db/migrate. Target specific version with VERSION=x. Turn off output with VERBOSE=false.
db\:migrate\:down=Runs the "down" for a given migration VERSION.
db\:migrate\:redo=Rollbacks the database one migration and re migrate up. If you want to rollback more than one step, define STEP=x
db\:migrate\:reset=Resets your database using your migrations for the current environment
db\:migrate\:up=Runs the "up" for a given migration VERSION.
db\:reset=Drops and recreates the database from db/schema.rb for the current environment.
db\:rollback=Rolls the schema back to the previous version. Specify the number of steps with STEP=n
db\:schema\:dump=Create a db/schema.rb file that can be portably used against any DB supported by AR
db\:schema\:load=Load a schema.rb file into the database
db\:sessions\:clear=Clear the sessions table
db\:sessions\:create=Creates a sessions migration for use with CGI::Session::ActiveRecordStore
db\:structure\:dump=Dump the database structure to a SQL file
db\:test\:clone=Recreate the test database from the current environment's database schema
db\:test\:clone_structure=Recreate the test databases from the development structure
db\:test\:prepare=Prepare the test database and load the schema
db\:test\:purge=Empty the test database
db\:version=Retrieves the current schema version number
default=
deploy=Push the latest revision into production (delegates to remote:deploy)
deprecated=Checks your app and gently warns you if you are using deprecated code.
doc=
doc/api=
doc/api/index.html=
doc/app=
doc/app/index.html=
doc\:app=Build the app HTML Files
doc\:clobber=
doc\:clobber_app=Remove rdoc products
doc\:clobber_plugins=Remove plugin documentation
doc\:clobber_rails=Remove rdoc products
doc\:plugins=Generate documentation for all installed plugins
doc\:plugins\:acts_as_authenticated=
doc\:plugins\:enfora_gateway=
doc\:plugins\:geokit=
doc\:plugins\:hoptoad_notifier=
doc\:plugins\:newrelic_rpm=
doc\:plugins\:paypal=
doc\:plugins\:query_reviewer=
doc\:plugins\:rails_rcov=
doc\:plugins\:shoulda=
doc\:plugins\:trunk=
doc\:plugins\:will_paginate=
doc\:rails=Build the rails HTML Files
doc\:reapp=Force a rebuild of the RDOC files
doc\:rerails=Force a rebuild of the RDOC files
environment=
extract_fixtures=Exports data from MySQL and creates fixure
gems=List the gems that this rails application depends on
gems\:base=
gems\:build=Build any native extensions for unpacked gems
gems\:install=Installs all required gems for this application.
gems\:unpack=Unpacks the specified gem into vendor/gems.
gems\:unpack\:dependencies=Unpacks the specified gems and its dependencies into vendor/gems
hoptoad\:test=Verify your plugin installation by sending a test exception to the hoptoad service
log\:clear=Truncates all *.log files in log/ to zero bytes
notes=Enumerate all annotations
notes\:fixme=Enumerate all FIXME annotations
notes\:optimize=Enumerate all OPTIMIZE annotations
notes\:todo=Enumerate all TODO annotations
query_reviewer\:setup=Create a default config/query_reviewer.yml
rails\:freeze\:edge=Lock to latest Edge Rails, for a specific release use RELEASE=1.2.0
rails\:freeze\:gems=Lock this application to the current gems (by unpacking them into vendor/rails)
rails\:unfreeze=Unlock this application from freeze of gems or edge and return to a fluid use of system gems
rails\:update=Update both configs, scripts and public/javascripts from Rails
rails\:update\:configs=Update config/boot.rb from your current rails install
rails\:update\:javascripts=Update your javascripts from your current rails install
rails\:update\:scripts=Add new scripts to the application script/ directory
remote\:cleanup=Removes unused releases from the releases directory.
remote\:cold_deploy=Used only for deploying when the spinner isn't running.
remote\:deploy=A macro-task that updates the code, fixes the symlink, and restarts the application servers.
remote\:deploy_with_migrations=Similar to deploy, but it runs the migrate task on the new release before updating the symlink.
remote\:diff_from_last_deploy=Displays the diff between HEAD and what was last deployed.
remote\:disable_web=Disable the web server by writing a "maintenance.html" file to the web servers.
remote\:enable_web=Re-enable the web server by deleting any "maintenance.html" file.
remote\:exec=Execute a specific action using capistrano
remote\:invoke=A simple task for performing one-off commands that may not require a full task to be written for them.
remote\:migrate=Run the migrate rake task.
remote\:restart=Restart the FCGI processes on the app server.
remote\:rollback=A macro-task that rolls back the code and restarts the application servers.
remote\:rollback_code=Rollback the latest checked-out version to the previous one by fixing the symlinks and deleting the current release from all servers.
remote\:set_permissions=Sets group permissions on checkout.
remote\:setup=Set up the expected application directory structure on all boxes
remote\:shell=Begin an interactive Capistrano session.
remote\:show_tasks=Enumerate and describe every available task.
remote\:spinner=Start the spinner daemon for the application (requires script/spin).
remote\:symlink=Update the 'current' symlink to point to the latest version of the application's code.
remote\:update=Updates the code and fixes the symlink under a transaction
remote\:update_code=Update all servers with the latest release of the source code.
remote\:update_current=Update the currently released version of the software directly via an SCM update operation
rollback=Rollback to the release before the current release in production (delegates to remote:rollback)
routes=Print out all defined routes in match order, with names.
secret=Generate a crytographically secure secret key. This is typically used to generate a secret for cookie sessions. Pass a unique identifier to the generator using ID="some unique identifier" for greater security.
shoulda\:from_yaml=Converts a YAML file (FILE=./path/to/yaml) into a Shoulda skeleton
shoulda\:list=List the names of the test methods in a specification like format
stats=Report code statistics (KLOCs, etc) from the application
test=Run all unit, functional and integration tests
test\:agent=Run tests for agent / Run the unit tests for the Agent
test\:agent\:clobber=
test\:agent\:clobber_rcov=Remove Rcov reports for agent tests
test\:agent\:rcov=Run all agent tests with Rcov to measure coverage
test\:all=Run tests for alltesttest:agent / Run all tests including agent code
test\:all\:clobber=
test\:all\:clobber_rcov=Remove Rcov reports for all tests
test\:all\:rcov=Run all all tests with Rcov to measure coverage
test\:functionals=Run tests for functionalsdb:test:prepare / Run the functional tests in test/functional
test\:functionals\:clobber=
test\:functionals\:clobber_rcov=Remove Rcov reports for functional tests
test\:functionals\:rcov=Run all functional tests with Rcov to measure coverage
test\:integration=Run tests for integrationdb:test:prepare / Run the integration tests in test/integration
test\:integration\:clobber=
test\:integration\:clobber_rcov=Remove Rcov reports for integration tests
test\:integration\:rcov=Run all integration tests with Rcov to measure coverage
test\:plugins=Run tests for pluginsenvironment / Run the plugin tests in vendor/plugins/*/**/test (or specify with PLUGIN=name)
test\:plugins\:clobber=
test\:plugins\:clobber_rcov=Remove Rcov reports for plugin tests
test\:plugins\:rcov=Run all plugin tests with Rcov to measure coverage
test\:recent=Run tests for recentdb:test:prepare / Test recent changes
test\:recent\:clobber=
test\:recent\:clobber_rcov=Remove Rcov reports for recent tests
test\:recent\:rcov=Run all recent tests with Rcov to measure coverage
test\:test\:clobber=
test\:test\:clobber_rcov=Remove Rcov reports for test tests
test\:test\:rcov=Run all test tests with Rcov to measure coverage
test\:uncommitted=Run tests for uncommitteddb:test:prepare / Test changes since last checkin (only Subversion)
test\:uncommitted\:clobber=
test\:uncommitted\:clobber_rcov=Remove Rcov reports for uncommitted tests
test\:uncommitted\:rcov=Run all uncommitted tests with Rcov to measure coverage
test\:units=Run tests for unitsdb:test:prepare / Run the unit tests in test/unit
test\:units\:clobber=
test\:units\:clobber_rcov=Remove Rcov reports for unit tests
test\:units\:rcov=Run all unit tests with Rcov to measure coverage
time\:zones\:all=Displays names of all time zones recognized by the Rails TimeZone class, grouped by offset. Results can be filtered with optional OFFSET parameter, e.g., OFFSET=-6
time\:zones\:local=Displays names of time zones recognized by the Rails TimeZone class with the same offset as the system local time
time\:zones\:us=Displays names of US time zones recognized by the Rails TimeZone class, grouped by offset. Results can be filtered with optional OFFSET parameter, e.g., OFFSET=-6
tmp\:cache\:clear=Clears all files and directories in tmp/cache
tmp\:clear=Clear session, cache, and socket files from tmp/
tmp\:create=Creates tmp directories for sessions, cache, and sockets
tmp\:pids\:clear=Clears all files in tmp/pids
tmp\:sessions\:clear=Clears all files in tmp/sessions
tmp\:sockets\:clear=Clears all files in tmp/sockets
ublip\:create_new_branch=Create a new customer branch
ublip\:deploy_db_procs=Deploy database procedures and triggers
ublip\:setup_db_scripts=Setup databse procs in cron
ublip\:tag_for_prod=Tag staging build in SVN for deployment to production
ublip\:tag_for_staging=Tag build in SVN for deployment to staging
ublip\:update_branch=Update customer branch to latest from trunk
